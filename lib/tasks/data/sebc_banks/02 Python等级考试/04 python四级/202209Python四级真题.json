{"code":"1","message":"数据获取成功","value":{"previousExamTime":60,"previousExamName":"202209Python四级真题","subjectLevelList":[{"id":7580,"createUser":null,"createTime":"2022-10-13 14:17:51","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>下列不是评判一个算法优劣的标准是</span><span>？（ ）</span></p>","optionA":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>时间复杂度<br><br></td></tr></tbody></table>","optionB":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>空间复杂度<br><br></td></tr></tbody></table>","optionC":"<p><span>难易度</span></p>","optionD":"<p><span>健壮性</span></p>","optionE":"","answer":"C","userAnswer":null,"analyzeContent":"<p><span>评价算法的优劣是：时间复杂度，空间复杂度，健壮性，正确性，可读性。因此选C。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7584,"createUser":null,"createTime":"2022-10-13 14:22:01","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>某自定义函数中使用了3个变量,其中2个变量都指定了默认值,调用该函数时,参数的个数最少为几个</span><span>？（ ）</span></p>","optionA":"0","optionB":"2","optionC":"3","optionD":"1","optionE":"","answer":"D","userAnswer":null,"analyzeContent":"<p><span>在调用函数时，如果用户不传递或者少传递参数，则会采用默认值。2个变量有默认值，还有1个变量没有实际参数值，所以至少传递1个。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7585,"createUser":null,"createTime":"2022-10-13 14:22:55","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<table tag=\"question\" is_child_question=\"\" id=\"question_3cf0a7c4-29a9-403e-a6b8-dea24bba1661\" question_uid=\"3cf0a7c4-29a9-403e-a6b8-dea24bba1661\" question_type_code=\"single\" question_type_name=\"单选题\" question_text=\"Python中用于字符与其ASCII码相互转换的内置函数是？（&amp;emsp;）\" select_answer=\"<options><option>float()    abs()</option><option>pow()     format()</option><option>ord()     chr()</option><option>round()   import()</option></options>\" question_score=\"2.00\" tag_question=\"\" class=\"layui-table\"><tbody><tr><td>Python中用于字符与其ASCII码相互转换的内置函数是？（ ）</td></tr></tbody></table>","optionA":"<p><span>float() abs()</span></p>","optionB":"<p><span>pow() format()</span></p>","optionC":"<p><span>ord() chr()</span></p>","optionD":"<p><span>round() import()</span></p>","optionE":"","answer":"C","userAnswer":null,"analyzeContent":"<p><span>用于ASCII码相互转换的内置函数。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7586,"createUser":null,"createTime":"2022-10-13 14:24:00","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>Python中，可以将数字类字符串转换成整数的函数是？（ ）</span></p>","optionA":"<p><span>int( )</span></p>","optionB":"<p><span>float( )</span></p>","optionC":"<p><span>bool( )</span></p>","optionD":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>class( )<br><br></td></tr></tbody></table>","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>Python将数字类字符串转换成整数的函数是int。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7588,"createUser":null,"createTime":"2022-10-13 14:24:51","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>运行下列这段程序，正确的输出结果是</span><span>？（ ）</span><br><span>LS = [\"apple\", \"red\", \"orange\"]</span><br><span>def funb(a):</span><br><span>&nbsp; &nbsp; LS.append(a)</span><br><span>funb(\"yellow\")</span><br><span>print(LS)</span></p>","optionA":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>[\"apple\",\"red\",\"orange\"]<br><br></td></tr></tbody></table>","optionB":"<p><span>[\"apple\",\"red\",\"orange\",\"yellow\"]</span></p>","optionC":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>[]</td></tr></tbody></table>","optionD":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>[\"yellow\"]<br><br></td></tr></tbody></table>","optionE":"","answer":"B","userAnswer":null,"analyzeContent":"<p><span>该函数作用是添加列表元素。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7595,"createUser":null,"createTime":"2022-10-13 14:28:18","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>下列代码的输出结果是</span><span>？（ ）</span><br><span>def func(a, b):</span><br><span>&nbsp; &nbsp; c=a**2+b</span><br><span>&nbsp; &nbsp; b=a</span><br><span>&nbsp; &nbsp; return c</span><br><span>a=10</span><br><span>b=2</span><br><span>c=func(b,a)+a</span><br><span>print(c,b)</span></p>","optionA":"<p><span>102 2</span></p>","optionB":"<p><span>24 10</span></p>","optionC":"<p><span>24 2</span></p>","optionD":"<p><span>102 10</span></p>","optionE":"","answer":"C","userAnswer":null,"analyzeContent":"<p><span>函数形参和实参。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7597,"createUser":null,"createTime":"2022-10-13 14:29:08","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>下列关于函数返回值的描述正确的是</span><span>？（ ）</span></p>","optionA":"<p><span>函数可以没有返回值，也可以有一个或多个返回值</span></p>","optionB":"<p><span>函数定义中最多含有一个return语句</span></p>","optionC":"<p><span>在函数定义中用return语句时，至少给一个返回值</span></p>","optionD":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>函数中 return语句只能放在函数定义的最后<br><br></td></tr></tbody></table>","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>Python函数可以没有返回值。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7602,"createUser":null,"createTime":"2022-10-13 14:36:38","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p>运行下列这段程序，正确的输出结果是<span>？（ ）</span></p><p>def reverseA(s):<br>&nbsp; &nbsp; t=\"\"<br>&nbsp; &nbsp; for i in range(0,len(s)):<br>&nbsp; &nbsp; &nbsp; &nbsp; t=s[i]+t<br>&nbsp; &nbsp; return t<br>print(reverseA(\"reverse\"))</p>","optionA":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>esrever</td></tr></tbody></table>","optionB":"<p><span>reverse</span></p>","optionC":"<p><span>rsereve</span></p>","optionD":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>rseveer</td></tr></tbody></table>","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>依次读取字符串，倒置字符串内容</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7604,"createUser":null,"createTime":"2022-10-13 14:38:27","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>下列导入pandas模块的方法不正确的是？（ ）</span></p>","optionA":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>import pandas</td></tr></tbody></table>","optionB":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>import pandas as p</td></tr></tbody></table>","optionC":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>import pandas *</td></tr></tbody></table>","optionD":"<p><span>from pandas import *</span></p>","optionE":"","answer":"C","userAnswer":null,"analyzeContent":"<p><span>from pandas import *是正确的。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7606,"createUser":null,"createTime":"2022-10-13 14:39:22","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>Python中提供了大量的标准库模块，比如利用time模块可以获取计算机的时钟信息，包括日期和时间，若想要实现延时1分钟，则应该使用的语句是？（　）</span></p>","optionA":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>sleep(3600)<br><br></td></tr></tbody></table>","optionB":"<p><span>time.time(60)</span></p>","optionC":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>time.asctime(1)</td></tr></tbody></table>","optionD":"<p><span>time.sleep(60)</span></p>","optionE":"","answer":"D","userAnswer":null,"analyzeContent":"<p><span>Python调用函数的格式。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7609,"createUser":null,"createTime":"2022-10-13 14:40:15","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>使用分治算法的基本步骤是？（ ）</span></p>","optionA":"<p><span>分解、解决、合并</span></p>","optionB":"<p><span>分解、解决</span></p>","optionC":"<p><span>合并、解决</span></p>","optionD":"<p><span>合并、解决、分解</span></p>","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>使用分治算法的基本步骤是分解、解决、合并。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7610,"createUser":null,"createTime":"2022-10-13 14:43:13","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>二分查找法是运用哪种策略实现的算法？（ ）</span></p>","optionA":"<p><span>分治法</span></p>","optionB":"贪心法","optionC":"<p><span>回溯法</span></p>","optionD":"<p><span>动态规划法</span></p>","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>二分查找法，也叫折半查找法。每次都通过跟区间的中间元素对比，将待查找的区间缩小为之前的一半，直到找到要查找的元素。属于分治算法的思想。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7611,"createUser":null,"createTime":"2022-10-13 14:43:50","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p>下列程序是分治算法的典型应用，其运行结果是？（ ）</p><p>def dividAndConquer(arr,left,right):&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if (right == left + 1) or (right == left):&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return max(arr[left],arr[right])&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;mid = int((left + right) / 2)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;leftMax = dividAndConquer(arr,left,mid)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;rightMax = dividAndConquer(arr,mid,right)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return max(leftMax,rightMax)&nbsp;</p><p>arr1 = [8, 1, 14, 19, 5]&nbsp;</p><p>print(dividAndConquer(arr1,0,4))</p>","optionA":"1","optionB":"19","optionC":"8","optionD":"5","optionE":"","answer":"B","userAnswer":null,"analyzeContent":"<p><span>分治算法求数组最大元素的值。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7612,"createUser":null,"createTime":"2022-10-13 14:44:35","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>列程序输出的结果是</span><span>？（ ）</span></p><p>def change(a,b):<br>&nbsp; &nbsp; a=10<br>&nbsp; &nbsp; b+=a<br>a=4<br>b=5<br>change(a,b)<br>print(a,b)</p>","optionA":"4 5","optionB":"10 5","optionC":"4 15","optionD":"10 15","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>函数内为局部变量，所以主程序的a、b值并未改变。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7613,"createUser":null,"createTime":"2022-10-13 14:45:16","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>下列程序运行的结果是？（ ）</span></p><p>def a():<br>&nbsp; &nbsp; print(\"here\")<br>b()<br>a()<br>def b():<br>&nbsp; &nbsp; print(\"there\")<br>a()<br>b()</p>","optionA":"出错","optionB":"死循环","optionC":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>here</td></tr></tbody></table>","optionD":"<p>here</p><p>there</p>","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>第一次调用b的时候，b还未被定义。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7614,"createUser":null,"createTime":"2022-10-13 14:46:26","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<table tag=\"question\" is_child_question=\"\" id=\"question_578fee05-9630-4c78-9699-41973dd86c63\" question_uid=\"578fee05-9630-4c78-9699-41973dd86c63\" question_type_code=\"single\" question_type_name=\"单选题\" question_text=\"设函数f定义如下：<br />\r\n<p>\r\n\tdef f(x,y = 0):<br />\r\n&amp;nbsp; &amp;nbsp; pass\r\n</p>\r\n<p>\r\n\t下列选项执行时，出现错误的是？（&amp;emsp;）\r\n</p>\" select_answer=\"<options><option>f(,2)</option><option>f(1,2)</option><option>f(1)</option><option>f(1,)</option></options>\" question_score=\"2.00\" tag_question=\"\" class=\"layui-table\"><tbody><tr><td>设函数f定义如下：<br><p>def f(x,y = 0):<br>&nbsp; &nbsp; pass</p><p>下列选项执行时，出现错误的是？（ ）</p></td></tr></tbody></table>","optionA":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>f(,2)<br><br></td></tr></tbody></table>","optionB":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>f(1,2)<br><br></td></tr></tbody></table>","optionC":"<p><span>f(1)</span></p>","optionD":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>f(1,)</td></tr></tbody></table>","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>不指定形参名称的话，参数只能省略后面的。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7616,"createUser":null,"createTime":"2022-10-13 14:47:11","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>下列程序段运行的结果是？（ ）</span></p><p>def check(x = 2,y = 3):<br>&nbsp; &nbsp; print(x,y)&nbsp;<br>check(y=6,x=5)</p>","optionA":"5 6","optionB":"6 5","optionC":"2 3","optionD":"3 2","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>按形参名称传递参数。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7619,"createUser":null,"createTime":"2022-10-13 14:48:12","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p>def AddApple(fruit=None):<br>&nbsp; &nbsp; if fruit is None:<br>&nbsp; &nbsp; &nbsp; &nbsp; fruit=[]<br>&nbsp; &nbsp; fruit.append('Apple')<br>&nbsp; &nbsp; return fruit<br>AddApple()<br>AddApple()<br>print(AddApple(['Pear']))</p><p>以上程序段运行的结果是<span>？（ ）</span></p>","optionA":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>['Pear','Apple']<br><br></td></tr></tbody></table>","optionB":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>['Pear','Apple','Apple']</td></tr></tbody></table><div></div>","optionC":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>['Apple','Pear','Apple','Apple']<br><br></td></tr></tbody></table>","optionD":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>['Apple']<br><br></td></tr></tbody></table>","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>第一、二次调用AddApple，虽然都会返回值，但并没有对返回值做任何处理。 第三次调用AddApple，程序直接用print语句把返回值输出。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7622,"createUser":null,"createTime":"2022-10-13 14:49:27","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>def ThankYou(name):</span><br><span>&nbsp; &nbsp; print(\"感谢%s对公司的贡献！\" %name)</span><br><br><span>ThankYou('张三')</span><br><span>ThankYou()</span><br><span>以上程序运行的结果是？（ ）</span></p>","optionA":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>打印输出：感谢张三对公司的贡献！<br><p>然后报错：TypeError: ThankYou() missing 1 required positional argument: 'name'</p><div><br></div></td></tr></tbody></table>","optionB":"<p>打印输出：</p><p>感谢张三对公司的贡献！</p><p>感谢对公司的贡献！</p>","optionC":"<p><span>无法输出。</span></p>","optionD":"<p><span>需要增加main函数才能正确运行。</span></p>","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>ThankYou第一次正常调用，第二次没带参数，所以报错。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7625,"createUser":null,"createTime":"2022-10-13 14:51:34","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>编写程序计算1+1/2+1/3+……+1/n的结果，可以使用哪种调用函数自身的算法？（ ）</span></p>","optionA":"<p><span>枚举</span></p>","optionB":"<p><span>递归</span></p>","optionC":"解析","optionD":"分治","optionE":"","answer":"B","userAnswer":null,"analyzeContent":"<p><span>递归算法的基本思想</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7626,"createUser":null,"createTime":"2022-10-13 14:53:15","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p>用下面的程序求解计算s=1+3+5+7+9的值，请选择横线处应填写的代码？（ ）</p><p>def Sum(n):<br>&nbsp; &nbsp; if n&lt;=1:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 1<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return ________<br>print(Sum(9))</p>","optionA":"<p><span>n+Sum(n-1)</span></p>","optionB":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>n+Sum(n+1)</td></tr></tbody></table>","optionC":"<p><span>n+Sum(n+2)</span></p>","optionD":"<p><span>n+Sum(n-2)</span></p>","optionE":"","answer":"D","userAnswer":null,"analyzeContent":"<p><span>算式的步长为2。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7627,"createUser":null,"createTime":"2022-10-13 14:54:11","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>下列选项中，哪一项不是递归函数必须要具备的条件？（ ）</span></p>","optionA":"<p><span>明确的边界条件</span></p>","optionB":"边界值","optionC":"循环语句","optionD":"终止条件","optionE":"","answer":"C","userAnswer":null,"analyzeContent":"<p><span>递归函数中不一定有循环语句。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7628,"createUser":null,"createTime":"2022-10-13 14:54:53","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<table tag=\"question\" is_child_question=\"\" id=\"question_a5b342c2-30a9-412f-b765-bd23fc66324c\" question_uid=\"a5b342c2-30a9-412f-b765-bd23fc66324c\" question_type_code=\"single\" question_type_name=\"单选题\" question_text=\"<p>\r\n\t用递归算法实现5的阶乘，则下方的程序中横线上需要的代码是？（&amp;emsp;）\r\n</p>\r\n<p>\r\n\tdef func(n):<br />\r\n&amp;nbsp; &amp;nbsp; if n&amp;lt;_______:<br />\r\n&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return func(n+1)*n<br />\r\n&amp;nbsp; &amp;nbsp; else:<br />\r\n&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return 1<br />\r\nprint(func(1))\r\n</p>\" select_answer=\"<options><option>4</option><option>5</option><option>6</option><option>7</option></options>\" question_score=\"2.00\" tag_question=\"\" class=\"layui-table\"><tbody><tr><td><p>用递归算法实现5的阶乘，则下方的程序中横线上需要的代码是？（ ）</p><p>def func(n):<br>&nbsp; &nbsp; if n&lt;_______:<br>&nbsp; &nbsp; &nbsp; &nbsp; return func(n+1)*n<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 1<br>print(func(1))</p></td></tr></tbody></table>","optionA":"4","optionB":"5","optionC":"6","optionD":"7","optionE":"","answer":"C","userAnswer":null,"analyzeContent":"<p><span>if的判断表达式为n&lt;a+1时，程序才能执行到n=a的情况。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7629,"createUser":null,"createTime":"2022-10-13 14:55:32","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p>执行以下代码，程序的输出结果是？（ ）</p><p>def weight(n):<br>&nbsp; &nbsp; if n==1:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 100<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return weight(n-1) +10<br>print(weight(3))</p>","optionA":"100","optionB":"110","optionC":"120","optionD":"130","optionE":"","answer":"C","userAnswer":null,"analyzeContent":"<p><span>100+10+10</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7630,"createUser":null,"createTime":"2022-10-13 14:56:23","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":1,"title":"<p><span>以下关于递归与递推的说法，错误的是？（ ）</span></p>","optionA":"<p><span>递归算法不涉及高深的数学知识，比较容易理解。</span></p>","optionB":"<p><span>递归过程一般通过函数或子过程来实现。</span></p>","optionC":"<table tag=\"single_multi_background\" class=\"layui-table\"><tbody><tr><td>递归算法是递推分解问题，然后再将最简单情况的解回归成大问题的解。<br><br></td></tr></tbody></table>","optionD":"<p><span>存在既可以用递归算法解决，也可以用递推算法解决的问题。</span></p>","optionE":"","answer":"A","userAnswer":null,"analyzeContent":"<p><span>递归算法虽然不涉及高深的数学知识，但是递归思想和模型并不容易理解。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7631,"createUser":null,"createTime":"2022-10-13 14:56:51","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":3,"title":"<p><span>函数中return语句只能放在函数定义的最后。（　）</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"0","userAnswer":null,"analyzeContent":"<p><span>return语句只要在函数体内都可以，一旦执行，退出函数体。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7633,"createUser":null,"createTime":"2022-10-13 14:57:15","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":3,"title":"<p><span>Python定义函数时如果没有参数，也不能省略后面的空括号</span><span>。（ ）</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"1","userAnswer":null,"analyzeContent":"<p><span>Python定义函数时空括号不可以省略。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7634,"createUser":null,"createTime":"2022-10-13 14:57:53","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":3,"title":"<p><span>函数的参数分为形参和实参两种，函数调用中实参和形参的值可以互相传递。</span><span>（ ）</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"0","userAnswer":null,"analyzeContent":"<p><span>函数调用时，实参和形参之间的数据是单向的值传递，实参传递给形参是单向传递。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7635,"createUser":null,"createTime":"2022-10-13 14:58:23","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":3,"title":"<p><span>导入模块中指定成员时，可采用的语句是：import&nbsp; 成员名1，成员名2&nbsp; &nbsp;from&nbsp; 模块名</span><span>。（ ）</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"0","userAnswer":null,"analyzeContent":"<p><span>导入模块中指定成员时，可采用的语句是：</span><span>from&nbsp; 模块名&nbsp; &nbsp;&nbsp;</span><span>import&nbsp; &nbsp;成员名1，成员名2&nbsp;</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7636,"createUser":null,"createTime":"2022-10-13 14:58:43","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":3,"title":"<p><span>二分搜索、快速排序可以使用分治算法进行求解。（ ）</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"1","userAnswer":null,"analyzeContent":"<p><span>二分搜索、快速排序是分治算法的典型案例。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7637,"createUser":null,"createTime":"2022-10-13 14:59:06","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":3,"title":"<p><span>调用带有默认值参数的函数时，不能为默认值参数传递任何值，只能使用函数定义时设定的默认值。（　）</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"0","userAnswer":null,"analyzeContent":"<p><span>调用带有默认值参数的函数时，可以为默认值参数传递其它值。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7639,"createUser":null,"createTime":"2022-10-13 14:59:33","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":3,"title":"<p><span>在Python中，可以在自定义函数中再定义函数</span><span>。（ ）</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"1","userAnswer":null,"analyzeContent":"<p><span>函数可以嵌套</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7640,"createUser":null,"createTime":"2022-10-13 14:59:59","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":3,"title":"<p><span>在定义一个函数时，如果出现调用自身的成分，则称为递推。（ ）</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"0","userAnswer":null,"analyzeContent":"<p><span>调用自身的成分是递归的特征。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7647,"createUser":null,"createTime":"2022-10-13 15:03:40","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":3,"title":"<p><span>递归算法通常显得很简洁，因为多次调用自身，所以运行效率较高，应该大力提倡用递归算法设计程序。（ ）</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"0","userAnswer":null,"analyzeContent":"<p><span>递归算法的效率不高，并不是首选算法，应该优先选择其他效率更高的算法。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7648,"createUser":null,"createTime":"2022-10-13 15:04:46","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":3,"title":"<p><span>同样的问题使用不同的算法编程解决，其时间复杂度可能不一样。（ ）</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"1","userAnswer":null,"analyzeContent":"<p><span>不同的算法，时间复杂度可能不一样。</span></p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7649,"createUser":null,"createTime":"2022-10-13 15:05:26","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<p><span>验证哥德巴赫猜想：任意一个大于等于4的偶数总可以分解为两个素数之和。请在下面的横线上补全代码，使得通过键盘输入一个偶数x(x&lt;1000，输出这两个素数。如果有多组解，只需要输出一组，并且第一个素数要尽可能地小。例如，输入“10”,输出“3&nbsp; 7“；输入“18”,输出“5&nbsp; 13”。</span><br><span>def prime(x):</span><br><span>&nbsp; &nbsp; for i in range(2, x):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; if x%i == 0:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;</span><u><span>&nbsp;    ①   &nbsp; &nbsp;</span></u><br><span>&nbsp; &nbsp; return 1</span><br><span>x=int(input(\"输入一个偶数x:\"))</span><br><span>for k in range(&nbsp;</span><u><span>&nbsp;    ②  &nbsp; &nbsp;</span></u><span>&nbsp;，x//2+1):</span><br><span>&nbsp; &nbsp; if prime(k) and prime(</span><u><span>&nbsp;    ③   &nbsp; &nbsp;</span></u><span>):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; print(</span><u><span>&nbsp; &nbsp;   ④&nbsp; &nbsp; &nbsp; &nbsp;</span></u><span>)</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; break</span></p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"<p><span><strong>参考程序：</strong></span></p><p><span>def prime(x):</span></p><p><span>&nbsp; &nbsp; for i in range(2, x):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; if x%i == 0:</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return</span><span>&nbsp;</span><span><strong>&nbsp;0</strong></span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; return 1</span><br><span>x=int(input(\"输入一个数x:\"))</span><br><span>for k in range(<span><strong>2</strong></span>,x//2+1):</span><br><span>&nbsp; &nbsp; if prime(k) and prime(<span><strong>x-k</strong></span>):</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; print(<span><strong>k,x-k</strong></span>)</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; break</span></p>","userAnswer":null,"analyzeContent":"<p><span><strong>评分标准:</strong></span></p><p><span>（1）</span>&nbsp;0 或等效答案 ；（3分）<br><span>（2）</span>&nbsp;2<span>&nbsp;或等效答案</span>&nbsp;；（3分）<br><span>（3）</span>&nbsp;x-k<span>&nbsp;或等效答案</span>&nbsp;；&nbsp; （3分）<br><span>（4）</span>&nbsp;k,x-k<span>&nbsp;或等效答案</span>&nbsp;。&nbsp; (3分)</p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7651,"createUser":null,"createTime":"2022-10-13 15:06:06","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数，例如12321、765567就是回文数。请补全下列代码，编程实现用分治的方法判断一个整数是否是回文数。&nbsp;</p><p>def ispel(s):</p><p>&nbsp; &nbsp; num = len(<u><span>&nbsp;  &nbsp;</span></u><span><u>①</u></span><u><span>&nbsp;  &nbsp;</span></u>)&nbsp;<br>&nbsp; &nbsp; if num == 0:<br>&nbsp; &nbsp; &nbsp; &nbsp; return False<br>&nbsp; &nbsp; if num == 1:<br>&nbsp; &nbsp; &nbsp; &nbsp; return True<br>&nbsp; &nbsp; if num == 2:<br>&nbsp; &nbsp; &nbsp; &nbsp; return s[0] ==<u>   </u><u><span>②</span>&nbsp;  &nbsp;</u><br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return s[0] == s[num - 1] and ispel(s[1:&nbsp;<u>  &nbsp;</u><u><span>③</span>&nbsp;  </u>])<br>st = input(\"请输入一个整数：\")</p><p><br>if&nbsp;<u><span>&nbsp;  &nbsp;</span></u><span><u><span>④  &nbsp;</span>&nbsp;</u></span>&nbsp;== True:<br>&nbsp; &nbsp; print(\"输入的是回文数\")<br>else:<br>&nbsp; &nbsp; print(\"输入的不是回文数\")</p>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"<p><strong><span>参考程序：</span></strong></p><p>def ispel(s):</p><p>&nbsp;&nbsp;&nbsp;&nbsp;num = len(<span>s</span>)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if num == 0:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return False</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if num == 1:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return True</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if num == 2:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return s[0] ==&nbsp;<span>s[1]</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;else:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return s[0] == s[num - 1] and ispel(s[1:<span>num - 1</span>])</p><p>st = input(\"请输入一个整数：\")</p><p>if&nbsp;<span>ispel(st)</span>&nbsp;== True:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;print(\"输入的是回文数\")</p><p>else:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;print(\"输入的不是回文数\")</p>","userAnswer":null,"analyzeContent":"<p><span><strong>评分标准：</strong></span></p><p></p><p class=\"p\">①&nbsp;&nbsp;s或等效答案&nbsp;；&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>（</span>2分）</p><p class=\"p\">②&nbsp;&nbsp;s[1]或等效答案&nbsp;<span>；</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（2分）</p><p class=\"p\">③&nbsp;&nbsp;num-1或等效答案&nbsp;；&nbsp;<span>（</span>2分）</p><p class=\"p\">④&nbsp;&nbsp;ispel(st)&nbsp;或等效答案。<span>（</span>2分）</p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":7652,"createUser":null,"createTime":"2022-10-13 15:06:57","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<p>小青蛙爬楼梯。楼梯有n级。小青蛙每次只能爬1级或2级。</p><p>当楼梯只有1级时，青蛙只有1种爬法。</p><p>当楼梯有2级时，青蛙有2种爬法：一次爬2级；一次爬1级，爬2次。</p><p>请从键盘上接收楼梯级数n，输出青蛙有几种爬法。</p><p>示例输入</p><p>请输入楼梯级数：8</p><p>示例输出</p><p>8级楼梯共有34种爬法。</p><p>程序如下：</p><p>def Climb(n):<br>&nbsp; &nbsp; if&nbsp;<u><span>   </span></u><u><u><span>①</span></u><span>   </span></u>:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 1<br>&nbsp; &nbsp; elif n==2:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<u><span>   </span><u><span>②</span></u><span>   </span></u><br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return<u><span>   </span><u><span>③&nbsp;  </span></u><span>  </span></u> <br>n=int(input(\"请输入楼梯级数：\"))<br>if n&gt;0:<br>&nbsp; &nbsp; print(\"%d级楼梯共有%d种爬法。\"%(<u><span>   </span><u><span>④ </span></u><span>  </span></u>,<u><span>   </span><u><u><span>⑤ </span></u></u><span>  </span></u>))</p>","optionA":"<p><span><strong>参考程序：</strong></span></p><p>def Climb(n):<br>&nbsp; &nbsp; if n==1:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 1<br>&nbsp; &nbsp; elif n==2:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 2<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return Climb(n-1)+Climb(n-2)<br>n=int(input(\"请输入楼梯级数：\"))<br>if n&gt;0:<br>&nbsp; &nbsp; print(\"%d级楼梯共有%d种爬法。\"%(n,Climb(n)))</p>","optionB":"","optionC":"","optionD":"","optionE":"","answer":"<p><span><strong>参考程序：</strong></span></p><p>def Climb(n):<br>&nbsp; &nbsp; if n==1:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 1<br>&nbsp; &nbsp; elif n==2:<br>&nbsp; &nbsp; &nbsp; &nbsp; return 2<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; return Climb(n-1)+Climb(n-2)<br>n=int(input(\"请输入楼梯级数：\"))<br>if n&gt;0:<br>&nbsp; &nbsp; print(\"%d级楼梯共有%d种爬法。\"%(n,Climb(n)))</p>","userAnswer":null,"analyzeContent":"<p><span><strong>评分标准：</strong></span></p><p><span></span></p><p class=\"p\"><span>（</span>1）n==1;&nbsp;&nbsp;（<span>2</span>分）</p><p class=\"p\"><span>（</span>2）return 2; （<span>2</span>分）</p><p class=\"p\"><span>（</span>3）Climb(n-1)+Climb(n-2); （2分）</p><p class=\"p\"><span>（</span>4）n; （2分）</p><p class=\"p\">（<span>5</span><span>）</span>Climb(n).（2分）</p>","analyzeVideo":null,"subjectId":null,"examDots":"35,","previousId":386,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null}]}}