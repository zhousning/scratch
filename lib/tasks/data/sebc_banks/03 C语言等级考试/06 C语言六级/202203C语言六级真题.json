{"code":"1","message":"数据获取成功","value":{"previousExamTime":120,"previousExamName":"202203C语言六级真题","subjectLevelList":[{"id":6042,"createUser":null,"createTime":"2022-04-11 14:05:29","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<div data-v-3a3f4f02=\"\" class=\"question-tit q-f-bold\">多项式相加</div><div data-v-3a3f4f02=\"\" class=\"q-description\"><p>&nbsp;&nbsp;&nbsp; 我们经常遇到两多项式相加的情况，在这里，我们就需要用程序来模拟实现把两个多项式相加到一起。首先，我们会有两个多项式，每个多项式是独立的一行，每个多项式由系数、幂数这样的多个整数对来表示。</p><p>如多项式2x<span>20</span>- x<span>17</span>+ 5x<span>9</span>- 7x<span>7</span>+ 16x<span>5</span>+ 10x<span>4&nbsp;</span>+ 22x<span>2</span>- 15</p><p>对应的表达式为：2 20 -1 17 5 9 - 7 7&nbsp;16 5 10 4 22 2 -15 0。&nbsp;&nbsp;</p><p>&nbsp;<strong>为了标记每行多项式的结束，在表达式后面加上了一个幂数为负数的整数对。</strong></p><p>同时输入表达式的幂数大小顺序是随机的。</p><p>我们需要做的就是把所给的两个多项式加起来。</p><p>&nbsp;</p><p>&nbsp;</p><p></p></div><div data-v-3a3f4f02=\"\" class=\"q-time-limit\">时间限制：1000</div><div data-v-3a3f4f02=\"\" class=\"q-memory-limit\">内存限制：65536</div><div data-v-3a3f4f02=\"\" class=\"q-input-tit q-f-bold\">输入</div><div data-v-3a3f4f02=\"\" class=\"q-input-description\">输入包括多行。 第一行整数n,表示有多少组的多项式需要求和。(1 &lt; n &lt; 100) 下面为2n行整数，每一行都是一个多项式的表达式。表示n组需要相加的多项式。 每行长度小于300。</div><div data-v-3a3f4f02=\"\" class=\"q-output-tit q-f-bold\">输出</div><div data-v-3a3f4f02=\"\" class=\"q-output-description\">输出包括n行，每行为1组多项式相加的结果。 在每一行的输出结果中，多项式的每一项用“[x y]”形式的字符串表示，x是该项的系数、y 是该项的幂数。要求按照每一项的幂从高到低排列，即先输出幂数高的项、再输出幂数低的项。 系数为零的项不要输出。</div><div data-v-3a3f4f02=\"\" class=\"q-sample-input-tit q-f-bold\">样例输入</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">2\r\n-1 17 2 20 5 9 -7 7 10 4 22 2 -15 0 16 5 0 -1\r\n2 19 7 7 3 17 4 4 15 10 -10 5 13 2 -7 0 8 -8\r\n-1 17 2 23 22 2 6 8 -4 7 -18 0 1 5 21 4 0 -1\r\n12 7 -7 5 3 17 23 4 15 10 -10 5 13 5 2 19 9 -7</pre><div data-v-3a3f4f02=\"\" class=\"q-sample-output-tit q-f-bold\">样例输出</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">[ 2 20 ] [ 2 19 ] [ 2 17 ] [ 15 10 ] [ 5 9 ] [ 6 5 ] [ 14 4 ] [ 35 2 ] [ -22 0 ]\r\n[ 2 23 ] [ 2 19 ] [ 2 17 ] [ 15 10 ] [ 6 8 ] [ 8 7 ] [ -3 5 ] [ 44 4 ] [ 22 2 ] [ -18 0 ]</pre><div data-v-3a3f4f02=\"\" class=\"q-output-tit q-f-bold\">提示</div><div data-v-3a3f4f02=\"\" class=\"q-output-description\">第一组样例数据的第二行末尾的8 -8，因为幂次-8为负数，所以这一行数据结束，8 -8不要参与计算。</div>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"无","userAnswer":null,"analyzeContent":"","analyzeVideo":null,"subjectId":null,"examDots":"34,","previousId":325,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":6044,"createUser":null,"createTime":"2022-04-11 14:07:12","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<div data-v-3a3f4f02=\"\" class=\"question-tit q-f-bold\">扩号匹配问题</div><div data-v-3a3f4f02=\"\" class=\"q-description\">在某个字符串（长度不超过100）中有左括号、右括号和大小写字母；规定（与常见的算数式子一样）任何一个左括号都从内到外与在它右边且距离最近的右括号匹配。写一个程序，找到无法匹配的左括号和右括号，输出原来字符串，并在下一行标出不能匹配的括号。不能匹配的左括号用\"$\"标注,不能匹配的右括号用\"?\"标注.</div><div data-v-3a3f4f02=\"\" class=\"q-time-limit\">时间限制：3000</div><div data-v-3a3f4f02=\"\" class=\"q-memory-limit\">内存限制：65536</div><div data-v-3a3f4f02=\"\" class=\"q-input-tit q-f-bold\">输入</div><div data-v-3a3f4f02=\"\" class=\"q-input-description\">输入包括多组数据，每组数据一行，包含一个字符串，只包含左右括号和大小写字母，<b>字符串长度不超过100</b></div><div data-v-3a3f4f02=\"\" class=\"q-output-tit q-f-bold\">输出</div><div data-v-3a3f4f02=\"\" class=\"q-output-description\">对每组输出数据，输出两行，第一行包含原始输入字符，第二行由\"$\",\"?\"和空格组成，\"$\"和\"?\"表示与之对应的左括号和右括号不能匹配。</div><div data-v-3a3f4f02=\"\" class=\"q-sample-input-tit q-f-bold\">样例输入</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">((ABCD(x)\r\n)(rttyy())sss)(</pre><div data-v-3a3f4f02=\"\" class=\"q-sample-output-tit q-f-bold\">样例输出</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">((ABCD(x)\r\n$$\r\n)(rttyy())sss)(\r\n?            ?$</pre>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"无","userAnswer":null,"analyzeContent":"","analyzeVideo":null,"subjectId":null,"examDots":"34,","previousId":325,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":6047,"createUser":null,"createTime":"2022-04-11 14:08:07","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<div data-v-3a3f4f02=\"\" class=\"question-tit q-f-bold\">拼写检查</div><div data-v-3a3f4f02=\"\" class=\"q-description\"><div>现在有一些英语单词需要做拼写检查，你的工具是一本词典。需要检查的单词，有的是词典中的单词，有的与词典中的单词相似，你的任务是发现这两种情况。单词A与单词B相似的情况有三种：</div><div>1、删除单词A的一个字母后得到单词B；</div><div>2、用任意一个字母替换单词A的一个字母后得到单词B；</div><div>3、在单词A的任意位置增加一个字母后得到单词B。</div><div>你的任务是发现词典中与给定单词相同或相似的单词。</div><p><br></p></div><div data-v-3a3f4f02=\"\" class=\"q-time-limit\">时间限制：2000</div><div data-v-3a3f4f02=\"\" class=\"q-memory-limit\">内存限制：65536</div><div data-v-3a3f4f02=\"\" class=\"q-input-tit q-f-bold\">输入</div><div data-v-3a3f4f02=\"\" class=\"q-input-description\">第一部分是词典中的单词，从第一行开始每行一个单词，以\"#\"结束。词典中的单词保证不重复，最多有10000个。 第二部分是需要查询的单词，每行一个，以\"#\"结束。最多有50个需要查询的单词。 词典中的单词和需要查询的单词均由小写字母组成，最多包含15个字符。</div><div data-v-3a3f4f02=\"\" class=\"q-output-tit q-f-bold\">输出</div><div data-v-3a3f4f02=\"\" class=\"q-output-description\">按照输入的顺序，为每个需要检查的单词输出一行。如果需要检查的单词出现在词典中，输出“?x is correct\"，?x代表需要检查的单词。如果需要检查的单词没有出现在词典中，则输出\"?x: ?x1 ?x2 ...?xn\"，其中?x代表需要检查的单词，?x1...?xn代表词典中与需要检查的单词相似的单词，这些单词中间以空格隔开。如果没有相似的单词，输出\"?x:\"即可。</div><div data-v-3a3f4f02=\"\" class=\"q-sample-input-tit q-f-bold\">样例输入</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">i\r\nis\r\nhas\r\nhave\r\nbe\r\nmy\r\nmore\r\ncontest\r\nme\r\ntoo\r\nif\r\naward\r\n#\r\nme\r\naware\r\nm\r\ncontest\r\nhav\r\noo\r\nor\r\ni\r\nfi\r\nmre\r\n#</pre><div data-v-3a3f4f02=\"\" class=\"q-sample-output-tit q-f-bold\">样例输出</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">me is correct\r\naware: award\r\nm: i my me\r\ncontest is correct\r\nhav: has have\r\noo: too\r\nor:\r\ni is correct\r\nfi: i\r\nmre: more me</pre>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"无","userAnswer":null,"analyzeContent":"","analyzeVideo":null,"subjectId":null,"examDots":"34,","previousId":325,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":6048,"createUser":null,"createTime":"2022-04-11 14:08:53","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<div data-v-3a3f4f02=\"\" class=\"question-tit q-f-bold\">利用队列进行数字排序</div><div data-v-3a3f4f02=\"\" class=\"q-description\"><p>对于N个数字，有人提出了如下的排序策略：</p><p class=\"MsoNormal\">例如，对于数字53、47、85、38、64、23</p><p class=\"MsoNormal\">&nbsp;</p><p class=\"MsoNormal\"><span>先建立10</span><span>个队列(0到9），用于存放数字的大小，将这N个数字依个位存放入各自的队列之中，然后再按队列0</span><span>到队列</span><span>9</span><span>依次出队。</span></p><p class=\"MsoNormal\"><span>例如，对于上面的数字，依次进队后，结果如下：</span></p><p class=\"MsoNormal\"><span>队列3：53、23　队列4：64　队列5：85　队列7：47　队列8：38</span></p><p class=\"MsoNormal\"><span>将其依次出队后，结果为</span><span>53,23,64,85,47,38</span></p><p class=\"MsoNormal\"><span>然后，再将方才出队后的队对，依照十位放入各自的队列之中，然后再按队列0到队列9依次出队</span></p><p class=\"MsoNormal\"><span>例如，对于上面刚刚出队的序列</span><span>53,23,64,85,47,38</span><span>，将其依次进队，结果如下：</span></p><p class=\"MsoNormal\"><span>队列2：23　队列3：38　队列4：47　队列5：53　队列6：64　队列8：85</span></p><p class=\"MsoNormal\"><span>将其依次出队后，结果为</span><span>23,38,47,53,64,85.因为这组数字最大只是两位数，所以排序结束。</span></p><p class=\"MsoNormal\"><span>如果还有更大的数字，那么，接下来就是其百位、千位……（如果位数不够，就补0.比如最大的数字是四位数，那么数字23就当成0023处理）</span></p><p class=\"MsoNormal\"><span>请根据上述算法，对这些数字进行排序</span></p><p>&nbsp;</p></div><div data-v-3a3f4f02=\"\" class=\"q-time-limit\">时间限制：1000</div><div data-v-3a3f4f02=\"\" class=\"q-memory-limit\">内存限制：65535</div><div data-v-3a3f4f02=\"\" class=\"q-input-tit q-f-bold\">输入</div><div data-v-3a3f4f02=\"\" class=\"q-input-description\">分为两行，第一行为一个数字N(1 &lt;= N &lt;= 1000)，表示数字的个数 第二行为N个数字（都是非负数），以空格相隔，最大的数字不超过9999</div><div data-v-3a3f4f02=\"\" class=\"q-output-tit q-f-bold\">输出</div><div data-v-3a3f4f02=\"\" class=\"q-output-description\">输出两个部分 第一个部分为第一次进队出队的结果，先显示一行：Step1. 之后用Queue0:...表示，共10行，结果用空格分隔，下同 之后为第二次进队出队的结果（如果需要第二次进队出队的话），先显示一行：Step2. 之后仍然用Queue0:...表示，共10行 之后如果需要的话，则分别显示第三次、第四次的进队出队结果 第二部分为一行，即将数字排序后的结果（升序排序）</div><div data-v-3a3f4f02=\"\" class=\"q-sample-input-tit q-f-bold\">样例输入</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">20\r\n41 67 34 0 69 24 78 58 62 64 5 45 81 27 61 91 95 42 27 36</pre><div data-v-3a3f4f02=\"\" class=\"q-sample-output-tit q-f-bold\">样例输出</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">Step1.\r\nQueue0:0\r\nQueue1:41 81 61 91\r\nQueue2:62 42\r\nQueue3:\r\nQueue4:34 24 64\r\nQueue5:5 45 95\r\nQueue6:36\r\nQueue7:67 27 27\r\nQueue8:78 58\r\nQueue9:69\r\nStep2.\r\nQueue0:0 5\r\nQueue1:\r\nQueue2:24 27 27\r\nQueue3:34 36\r\nQueue4:41 42 45\r\nQueue5:58\r\nQueue6:61 62 64 67 69\r\nQueue7:78\r\nQueue8:81\r\nQueue9:91 95\r\n0 5 24 27 27 34 36 41 42 45 58 61 62 64 67 69 78 81 91 95</pre>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"无","userAnswer":null,"analyzeContent":"","analyzeVideo":null,"subjectId":null,"examDots":"34,","previousId":325,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null}]}}