{"code":"1","message":"数据获取成功","value":{"previousExamTime":120,"previousExamName":"202203C语言七级真题","subjectLevelList":[{"id":6056,"createUser":null,"createTime":"2022-04-11 14:16:22","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<div data-v-3a3f4f02=\"\" class=\"question-tit q-f-bold\">红与黑</div><div data-v-3a3f4f02=\"\" class=\"q-description\">有一间长方形的房子，地上铺了红色、黑色两种颜色的正方形瓷砖。你站在其中一块黑色的瓷砖上，只能向相邻的黑色瓷砖移动。请写一个程序，计算你总共能够到达多少块黑色的瓷砖。</div><div data-v-3a3f4f02=\"\" class=\"q-time-limit\">时间限制：1000</div><div data-v-3a3f4f02=\"\" class=\"q-memory-limit\">内存限制：65536</div><div data-v-3a3f4f02=\"\" class=\"q-input-tit q-f-bold\">输入</div><div data-v-3a3f4f02=\"\" class=\"q-input-description\">包括多个数据集合。每个数据集合的第一行是两个整数W和H，分别表示x方向和y方向瓷砖的数量。W和H都不超过20。在接下来的H行中，每行包括W个字符。每个字符表示一块瓷砖的颜色，规则如下 1）‘.’：黑色的瓷砖； 2）‘#’：白色的瓷砖； 3）‘@’：黑色的瓷砖，并且你站在这块瓷砖上。该字符在每个数据集合中唯一出现一次。 当在一行中读入的是两个零时，表示输入结束。</div><div data-v-3a3f4f02=\"\" class=\"q-output-tit q-f-bold\">输出</div><div data-v-3a3f4f02=\"\" class=\"q-output-description\">对每个数据集合，分别输出一行，显示你从初始位置出发能到达的瓷砖数(记数时包括初始位置的瓷砖)。</div><div data-v-3a3f4f02=\"\" class=\"q-sample-input-tit q-f-bold\">样例输入</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">6 9 \r\n....#. \r\n.....# \r\n...... \r\n...... \r\n...... \r\n...... \r\n...... \r\n#@...# \r\n.#..#. \r\n0 0\r\n</pre><div data-v-3a3f4f02=\"\" class=\"q-sample-output-tit q-f-bold\">样例输出</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">45</pre>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"无","userAnswer":null,"analyzeContent":"","analyzeVideo":null,"subjectId":null,"examDots":"40,","previousId":328,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":6058,"createUser":null,"createTime":"2022-04-11 14:16:52","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<div data-v-3a3f4f02=\"\" class=\"question-tit q-f-bold\">迷宫问题</div><div data-v-3a3f4f02=\"\" class=\"q-description\"><p><span>定义一个二维数组：&nbsp;</span><br></p><pre>int maze[5][5] = {\r\n\r\n0, 1, 0, 0, 0,\r\n\r\n0, 1, 0, 1, 0,\r\n\r\n0, 0, 0, 0, 0,\r\n\r\n0, 1, 1, 1, 0,\r\n\r\n0, 0, 0, 1, 0,\r\n\r\n};</pre><p><br><span>它表示一个迷宫，其中的1表示墙壁，0表示可以走的路，只能横着走或竖着走，不能斜着走，要求编程序找出从左上角到右下角的最短路线。</span></p><p><br></p></div><div data-v-3a3f4f02=\"\" class=\"q-time-limit\">时间限制：1000</div><div data-v-3a3f4f02=\"\" class=\"q-memory-limit\">内存限制：65536</div><div data-v-3a3f4f02=\"\" class=\"q-input-tit q-f-bold\">输入</div><div data-v-3a3f4f02=\"\" class=\"q-input-description\">一个5 × 5的二维数组，表示一个迷宫。数据保证有唯一解。</div><div data-v-3a3f4f02=\"\" class=\"q-output-tit q-f-bold\">输出</div><div data-v-3a3f4f02=\"\" class=\"q-output-description\">左上角到右下角的最短路径，格式如样例所示。</div><div data-v-3a3f4f02=\"\" class=\"q-sample-input-tit q-f-bold\">样例输入</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">0 1 0 0 0\r\n0 1 0 1 0\r\n0 0 0 0 0\r\n0 1 1 1 0\r\n0 0 0 1 0</pre><div data-v-3a3f4f02=\"\" class=\"q-sample-output-tit q-f-bold\">样例输出</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">(0, 0)\r\n(1, 0)\r\n(2, 0)\r\n(2, 1)\r\n(2, 2)\r\n(2, 3)\r\n(2, 4)\r\n(3, 4)\r\n(4, 4)</pre>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"无","userAnswer":null,"analyzeContent":"","analyzeVideo":null,"subjectId":null,"examDots":"40,","previousId":328,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":6060,"createUser":null,"createTime":"2022-04-11 14:17:22","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<div data-v-3a3f4f02=\"\" class=\"question-tit q-f-bold\">二叉树的深度</div><div data-v-3a3f4f02=\"\" class=\"q-description\"><p>给定一棵二叉树，求该二叉树的深度</p><p>二叉树深度定义：从根结点到叶结点依次经过的结点（含根、叶结点）形成树的一条路径，最长路径的节点个数为树的深度</p></div><div data-v-3a3f4f02=\"\" class=\"q-time-limit\">时间限制：1000</div><div data-v-3a3f4f02=\"\" class=\"q-memory-limit\">内存限制：65535</div><div data-v-3a3f4f02=\"\" class=\"q-input-tit q-f-bold\">输入</div><div data-v-3a3f4f02=\"\" class=\"q-input-description\">第一行是一个整数n，表示二叉树的结点个数。二叉树结点编号从1到n，根结点为1，n &lt;= 10 接下来有n行，依次对应二叉树的n个节点。 每行有两个整数，分别表示该节点的左儿子和右儿子的节点编号。如果第一个（第二个）数为-1则表示没有左（右）儿子</div><div data-v-3a3f4f02=\"\" class=\"q-output-tit q-f-bold\">输出</div><div data-v-3a3f4f02=\"\" class=\"q-output-description\">输出一个整型数，表示树的深度</div><div data-v-3a3f4f02=\"\" class=\"q-sample-input-tit q-f-bold\">样例输入</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">3\r\n2 3\r\n-1 -1\r\n-1 -1</pre><div data-v-3a3f4f02=\"\" class=\"q-sample-output-tit q-f-bold\">样例输出</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">2</pre>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"无","userAnswer":null,"analyzeContent":"","analyzeVideo":null,"subjectId":null,"examDots":"40,","previousId":328,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null},{"id":6063,"createUser":null,"createTime":"2022-04-11 14:18:49","isDeleted":0,"updateUser":null,"updateTime":null,"version":0,"type":4,"title":"<div data-v-3a3f4f02=\"\" class=\"question-tit q-f-bold\">表达式·表达式树·表达式求值</div><div data-v-3a3f4f02=\"\" class=\"q-description\"><p>众所周知，任何一个表达式，都可以用一棵表达式树来表示。例如，表达式a+b*c，可以表示为如下的表达式树：</p><p>&nbsp;&nbsp; +<br>&nbsp; / \\<br>&nbsp;a&nbsp;&nbsp; *<br>&nbsp;&nbsp;&nbsp; / \\<br>&nbsp;&nbsp;&nbsp; b c</p><p>现在，给你一个中缀表达式，这个中缀表达式用变量来表示（不含数字），请你将这个中缀表达式用表达式二叉树的形式输出出来。</p></div><div data-v-3a3f4f02=\"\" class=\"q-time-limit\">时间限制：1000</div><div data-v-3a3f4f02=\"\" class=\"q-memory-limit\">内存限制：65535</div><div data-v-3a3f4f02=\"\" class=\"q-input-tit q-f-bold\">输入</div><div data-v-3a3f4f02=\"\" class=\"q-input-description\">输入分为三个部分。 第一部分为一行，即中缀表达式(长度不大于50)。中缀表达式可能含有小写字母代表变量（a-z），也可能含有运算符（+、-、*、/、小括号），不含有数字，也不含有空格。 第二部分为一个整数n(n &lt; 10)，表示中缀表达式的变量数。 第三部分有n行，每行格式为C　x，C为变量的字符，x为该变量的值。</div><div data-v-3a3f4f02=\"\" class=\"q-output-tit q-f-bold\">输出</div><div data-v-3a3f4f02=\"\" class=\"q-output-description\">输出分为三个部分，第一个部分为该表达式的逆波兰式，即该表达式树的后根遍历结果。占一行。 第二部分为表达式树的显示，如样例输出所示。如果该二叉树是一棵满二叉树，则最底部的叶子结点，分别占据横坐标的第1、3、5、7……个位置（最左边的坐标是1），然后它们的父结点的横坐标，在两个子结点的中间。如果不是满二叉树，则没有结点的地方，用空格填充（但请略去所有的行末空格）。每一行父结点与子结点中隔开一行，用斜杠（/）与反斜杠（\\）来表示树的关系。/出现的横坐标位置为父结点的横坐标偏左一格，\\出现的横坐标位置为父结点的横坐标偏右一格。也就是说，如果树高为m，则输出就有2m-1行。 第三部分为一个整数，表示将值代入变量之后，该中缀表达式的值。需要注意的一点是，除法代表整除运算，即舍弃小数点后的部分。同时，测试数据保证不会出现除以0的现象。</div><div data-v-3a3f4f02=\"\" class=\"q-sample-input-tit q-f-bold\">样例输入</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">a+b*c\r\n3\r\na 2\r\nb 7\r\nc 5</pre><div data-v-3a3f4f02=\"\" class=\"q-sample-output-tit q-f-bold\">样例输出</div><pre data-v-3a3f4f02=\"\" class=\"q-sample\">abc*+\r\n   +\r\n  / \\\r\n a   *\r\n    / \\\r\n    b c\r\n37</pre>","optionA":"","optionB":"","optionC":"","optionD":"","optionE":"","answer":"无","userAnswer":null,"analyzeContent":"","analyzeVideo":null,"subjectId":null,"examDots":"40,","previousId":328,"sprintId":null,"subjectNumber":null,"difficultyLevel":null,"images":null,"weType":0,"wxAnswerType":null,"isMySubject":null}]}}